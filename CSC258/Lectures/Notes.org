* Week 2
** Labs
   Look at summary of TODO's
** Circuits
   Generally, and before or unless otherwise specified (breackets)
*** Creating complex logic
   Create truth table of the desire behaviour
   Come up with a good boolean expression with the truth table
   Covert the boolean extression to gates
   
   Key point is creating a good boolean expression
** Minterms and Maxterms
   Sort the rolls accorinng to the values to ABC
   The for each row, name the inputs as m_{Row_Number}

   The minterm: an AND expression with every input represented in true or complemented form
      Looking for 1 output
   The maxterm: an OR expression with every input respresented in true or complemented form
      Looking for 0 output
*** Examples
    Lets have a circuit with 4 inputs: A B C D

    | Circuit   | Max or Min term            |
    |-----------+----------------------------|
    | A\cdot{}B\cdot{}C     | Neither (missing input)    |
    | A+B+C     | Neither (missing input)    |
    | A\cdot{}B+C\cdot{}D   | Neither (mixes AND and OR) |
    | A+\not{}B+C+\not{}D | Maxterm, M_5                |
    | A\cdot\not{}B\cdot{}C\cdot{}\not{}D | Minterm, m_10               |
    
** Notation
   AND can be rep with \cdot or * or ^
   OR can be rep with + or v
   NOT can be rep with \not or A' or \[ \overline{A} \]
   XOR is plus with circle

** Going from Truth Table to Expression
   A single minterm indiates with inputs and will make the output go high
   We can use AND or OR on mintables to explain more complecated expressions
   Sum on minterms - Find a single high
     Known as a Sum-of-Products
   Product of Maxterms - Find a single low
     Known as Product of Sums
   These are interchangebale, however look at if you require more high or low values

   We can simplity statements if they differn by a single point

*** KMap
    Min terms in 1 retangle can ve reduced into 1 term
    
* Week 3
** Devices
*** Multiplexer
**** Examples
    - Surveillance video
    - Routers
    - Cable boxes
    
**** What is it
     - Multiple inputs with a single output
     - Flow control
*** Adder Circuits
**** What is it
     - Binary Adders
     - Iterative combinational circuits
     - Many different types, we will learn 3
**** How does it work (Half Adder)
     - Input: 2 1 bit numbers
     - Output: 1 2 bit number
     - No chaining
**** How does it work (Full Adder)
     - Input: 3 1 bit numbers, can take a carry bit
     - Output: 2 1 bit number
     - Can be chained together to get more bits
**** How does it work (Ripple-Carry Binary Adder)
     - Full adder units chained together in order to perform operations on signal vectors
**** The role of C_in
     - Why not use a half adder as the lead?
     - We can use the extra bit for subtraction!
**** Lets play a game...
     - Convert 2 numbers to binary
     - Invert the smaller number
     - Add the numbers
     - Add 1
     - Subtraction!
*** Subtractors
**** What is it
     - Extension of adders
***** Two Types of numbers
      - Unsigned - spparate bit exists for the sign
      - Signed - 2's complement
**** 2's Complement
     - Adding a 2's complement number to the original number will produce 0. Negation!
**** Subtraction - Unsigned
     - Get the 2's complement of B (-B)
     - Add the 2's complement of B to A
     - If there is a carry (high) the final result is positive
     - If there is no carry (low) the final result is a negative number, get the 2's complement of it
**** Overflow all the numbers, hack pokemon
*** Decoder
**** What is it?
     - Given encoded information, decode to original information
     - Translate the output of one circuit into the input of another
*** Demultiplexer
    - Well, it multiplxes in reverse.
    - One input, multiples outputs
* Week 4
** Comparators
   - 1 bit comparator
     - Equality can be found with XNOR
     - Greater then can be found with A and not B
     - Less then can be found with not A and B
   - 2 bit comparator
     - Equality can be found with (A_1 \cdot{}B_1 + A'_1 \cdot{}B'_1) \cdot{}(A_0 \cdot{}B_0 + A'_0 \cdot{}B'_0)
     - Greater then can be found with ..... It gets messy
   - How can we do this with larger numbers?
     - Subtract the numbers and check the signed bit
** Sequential Circuits / Flip-Flops
   - Why do we have memory
   - Because it helps in the fetish porn industry
   - 
